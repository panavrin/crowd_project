{"source":"__coffeescriptShare = typeof __coffeescriptShare === 'object' ? __coffeescriptShare : {}; var share = __coffeescriptShare;\nvar ShareJSTextConnector,                  \n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nShareJSConnector = (function() {\n  var getOptions;\n\n  getOptions = function() {\n    return {\n      origin: '//' + window.location.host + '/channel',\n      authentication: (typeof Meteor.userId === \"function\" ? Meteor.userId() : void 0) || null\n    };\n  };\n\n  function ShareJSConnector(parentView) {\n    var docIdVar, params;\n    docIdVar = new Blaze.ReactiveVar;\n    parentView.onViewReady(function() {\n      return this.autorun(function() {\n        var data;\n        data = Blaze.getData();\n        return docIdVar.set(data.docid);\n      });\n    });\n    parentView.onViewDestroyed((function(_this) {\n      return function() {\n        return _this.destroy();\n      };\n    })(this));\n    this.isCreated = false;\n    this.docIdVar = docIdVar;\n    params = Blaze.getData(parentView);\n    this.configCallback = params.onRender;\n    this.connectCallback = params.onConnect;\n  }\n\n  ShareJSConnector.prototype.create = function() {\n    var connector;\n    if (this.isCreated) {\n      throw new Error(\"Already created\");\n    }\n    connector = this;\n    this.isCreated = true;\n    this.view = this.createView();\n    this.view.onViewReady(function() {\n      connector.rendered(this.firstNode());\n      return this.autorun(function() {\n        var docId;\n        docId = connector.docIdVar.get();\n        connector.disconnect();\n        if (docId) {\n          return connector.connect(docId);\n        }\n      });\n    });\n    return this.view;\n  };\n\n  ShareJSConnector.prototype.rendered = function(element) {\n    return this.element = element;\n  };\n\n  ShareJSConnector.prototype.connect = function(docId, element) {\n    this.connectingId = docId;\n    return sharejs.open(docId, 'text', getOptions(), (function(_this) {\n      return function(error, doc) {\n        if (error) {\n          Meteor._debug(error);\n          return;\n        }\n        if (_this.connectingId !== doc.name) {\n          return doc.close();\n        } else {\n          return _this.attach(doc);\n        }\n      };\n    })(this));\n  };\n\n  ShareJSConnector.prototype.attach = function(doc) {\n    return this.doc = doc;\n  };\n\n  ShareJSConnector.prototype.disconnect = function() {\n    if (this.doc != null) {\n      this.doc.close();\n      return this.doc = null;\n    }\n  };\n\n  ShareJSConnector.prototype.destroy = function() {\n    if (this.isDestroyed) {\n      throw new Error(\"Already destroyed\");\n    }\n    this.disconnect();\n    this.view = null;\n    return this.isDestroyed = true;\n  };\n\n  return ShareJSConnector;\n\n})();\n\nShareJSTextConnector = (function(superClass) {\n  extend(ShareJSTextConnector, superClass);\n\n  function ShareJSTextConnector() {\n    return ShareJSTextConnector.__super__.constructor.apply(this, arguments);\n  }\n\n  ShareJSTextConnector.prototype.createView = function() {\n    return Blaze.With(Blaze.getData, function() {\n      return Template._sharejsText;\n    });\n  };\n\n  ShareJSTextConnector.prototype.rendered = function(element) {\n    ShareJSTextConnector.__super__.rendered.apply(this, arguments);\n    this.textarea = element;\n    return typeof this.configCallback === \"function\" ? this.configCallback(this.textarea) : void 0;\n  };\n\n  ShareJSTextConnector.prototype.connect = function() {\n    this.textarea.disabled = true;\n    return ShareJSTextConnector.__super__.connect.apply(this, arguments);\n  };\n\n  ShareJSTextConnector.prototype.attach = function(doc) {\n    ShareJSTextConnector.__super__.attach.apply(this, arguments);\n    doc.attach_textarea(this.textarea);\n    this.textarea.disabled = false;\n    return typeof this.connectCallback === \"function\" ? this.connectCallback(this.textarea) : void 0;\n  };\n\n  ShareJSTextConnector.prototype.disconnect = function() {\n    var ref;\n    if ((ref = this.textarea) != null) {\n      if (typeof ref.detach_share === \"function\") {\n        ref.detach_share();\n      }\n    }\n    return ShareJSTextConnector.__super__.disconnect.apply(this, arguments);\n  };\n\n  ShareJSTextConnector.prototype.destroy = function() {\n    ShareJSTextConnector.__super__.destroy.apply(this, arguments);\n    return this.textarea = null;\n  };\n\n  return ShareJSTextConnector;\n\n})(ShareJSConnector);\n\nUI.registerHelper(\"sharejsText\", new Template('sharejsText', function() {\n  return new ShareJSTextConnector(this).create();\n}));\n","sourceMap":{"version":3,"file":"/sharejs-client.coffee.js","sourceRoot":"","sources":["/packages/mizzao_sharejs/sharejs-client.coffee"],"names":[],"mappings":"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","sourcesContent":["class ShareJSConnector\n\n  getOptions = ->\n    origin: '//' + window.location.host + '/channel'\n    authentication: Meteor.userId?() or null # accounts-base may not be in the app\n\n  constructor: (parentView) ->\n    # Create a ReactiveVar that tracks the docId that was passed in\n    docIdVar = new Blaze.ReactiveVar\n\n    parentView.onViewReady ->\n      this.autorun ->\n        data = Blaze.getData()\n        docIdVar.set(data.docid)\n\n    parentView.onViewDestroyed =>\n      this.destroy()\n\n    @isCreated = false\n    @docIdVar = docIdVar\n\n    # Configure any callbacks if specified\n    params = Blaze.getData(parentView)\n    @configCallback = params.onRender\n    @connectCallback = params.onConnect\n\n  create: ->\n    throw new Error(\"Already created\") if @isCreated\n    connector = this\n    @isCreated = true\n\n    @view = @createView()\n    @view.onViewReady ->\n      connector.rendered( this.firstNode() )\n\n      this.autorun ->\n        # By grabbing docId here, we ensure that we only try to connect when\n        # this is rendered.\n        docId = connector.docIdVar.get()\n\n        # Disconnect any existing connections\n        connector.disconnect()\n        connector.connect(docId) if docId\n\n    return @view\n\n  # Set up the context when rendered.\n  rendered: (element) ->\n    this.element = element\n\n  # Connect to a document.\n  connect: (docId, element) ->\n    @connectingId = docId\n\n    sharejs.open docId, 'text', getOptions(), (error, doc) =>\n      if error\n        Meteor._debug(error)\n        return\n\n      # Don't attach if re-render happens too quickly and we're trying to\n      # connect to a different document now.\n      unless @connectingId is doc.name\n        doc.close() # Close immediately\n      else\n        @attach(doc)\n\n  # Attach shareJS to the on-screen editor\n  attach: (doc) ->\n    @doc = doc\n\n  # Disconnect from ShareJS. This should be idempotent.\n  disconnect: ->\n    # Close connection to the ShareJS doc\n    if @doc?\n      @doc.close()\n      @doc = null\n\n  # Destroy the connector and make sure everything's disconnected.\n  destroy: ->\n    throw new Error(\"Already destroyed\") if @isDestroyed\n\n    @disconnect()\n    @view = null\n    @isDestroyed = true\n\nclass ShareJSTextConnector extends ShareJSConnector\n\n  createView: ->\n    return Blaze.With(Blaze.getData, -> Template._sharejsText)\n\n  rendered: (element) ->\n    super\n    @textarea = element\n    @configCallback?(@textarea)\n\n  connect: ->\n    @textarea.disabled = true\n    super\n\n  attach: (doc) ->\n    super\n    doc.attach_textarea(@textarea)\n    @textarea.disabled = false\n    @connectCallback?(@textarea)\n\n  disconnect: ->\n    @textarea?.detach_share?()\n    super\n\n  destroy: ->\n    super\n    # Meteor._debug \"destroying textarea editor\"\n    @textarea = null\n\nUI.registerHelper \"sharejsText\", new Template('sharejsText', ->\n  return new ShareJSTextConnector(this).create()\n)\n"]}}